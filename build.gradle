buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies { classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT' }
}

apply plugin: 'forge'
apply plugin: 'maven'
apply plugin: 'curseforge'

group = 'com.matthewprenger.helpfixer'
archivesBaseName = 'HelpFixer'

if (System.getenv('BUILD_NUMBER') != null) {
    version += ".${System.getenv('BUILD_NUMBER')}"
} else {
    version += ".CUSTOM"
}

minecraft {
    version = "$minecraft_version-$forge_version"
    mappings = mappings_version
    runDir = 'run'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.11'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property 'description', project.description
    inputs.property 'url', project.url

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand([
                'version'    : project.version,
                'mcversion'  : project.minecraft.version,
                'description': project.description,
                'url'        : project.url
        ])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

def commonManifest = [
        'Built-By'              : System.getProperty('user.name'),
        'Created-By'            : "${System.getProperty('java.version')} + (${System.getProperty('java.vendor')})",
        'Implementation-Version': project.version,
        'Implementation-Title'  : project.name,
        'Minecraft-Version'     : project.minecraft.version,
        'Forge-Version'         : forge_version
]

jar {
    manifest.mainAttributes(commonManifest)
}

task sourcesJar(type: Jar) {
    manifest.mainAttributes(commonManifest)
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    manifest.mainAttributes(commonManifest)
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    manifest.mainAttributes(commonManifest)
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.assemble.dependsOn sourcesJar, javadocJar, deobfJar

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
    archives deobfJar
}

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
    task.options.fork = true
}

uploadArchives {
    dependsOn build
    repositories.mavenDeployer {
        if (project.hasProperty('forgemaven_user') && project.hasProperty('forgemaven_password')) {
            repository(url: 'http://files.minecraftforge.net/maven/manage/upload') {
                authentication(userName: project.forgemaven_user, password: project.forgemaven_password)
            }
        } else {
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
        }

        pom.project {
            name project.name
            packaging 'jar'
            description project.description
            url project.url
            inceptionYear project.inceptionYear

            scm {
                url 'https://github.com/matthewprenger/HelpFixer'
                connection 'scm:git:git://github.com/matthewprenger/HelpFixer.git'
                developerConnection 'scm:git:git@github.com:matthewprenger/HelpFixer.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/matthewprenger/HelpFixer/issues'
            }

            licenses {
                license {
                    name 'DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE'
                    url 'http://www.wtfpl.net/txt/copying/'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'matthewprenger'
                    name 'Matthew Prenger'
                    roles {
                        role 'developer'
                    }
                }
            }
        }
    }
}

curse {
    dependsOn build
    mustRunAfter uploadArchives
    onlyIf { return project.hasProperty('curseforge_key') }

    if (project.hasProperty('curseforge_key')) {
        apiKey = project.curseforge_key
    }
    projectId = 223797
    changelog = project.hasProperty('changelog') ? project.changelog : ''
    releaseType = project.hasProperty('releaseType') ? project.releaseType : 'release'
    displayName = "HelpFixer - $project.version"

    additionalArtifact sourcesJar, javadocJar, deobfJar
}
